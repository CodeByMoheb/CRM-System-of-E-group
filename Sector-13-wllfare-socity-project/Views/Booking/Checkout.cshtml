@model Sector_13_Welfare_Society___Digital_Management_System.Models.Booking
@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var bookingItems = ViewBag.BookingItems as List<Sector_13_Welfare_Society___Digital_Management_System.Models.BookingItemCalculation>;
    var totalAmount = (decimal)ViewBag.TotalAmount;
    var currency = ViewBag.Currency as string ?? "USD";
}

<style>
    .checkout-scope {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding-bottom: 30px;
    }
    .checkout-scope .page-title-box {
        background: linear-gradient(180deg, rgba(255,255,255,0.2), rgba(255,255,255,0.08));
        border-radius: 14px;
        padding: 16px 20px;
        margin-top: 24px;
        box-shadow: 0 12px 32px rgba(31,38,135,0.15);
        color: #fff;
    }
    .checkout-scope .page-title { margin: 0; font-weight: 700; }
    .checkout-scope .card { 
        background: linear-gradient(180deg, #ffffff 0%, #f7f9ff 100%);
        border-radius: 16px; 
        border: 1px solid #eef2f7; 
        box-shadow: 0 10px 30px rgba(31,38,135,0.15);
        overflow: hidden;
    }
    .checkout-scope .card-header { 
        background: linear-gradient(135deg, #4b50bf 0%, #5a67d8 100%); 
        color: #fff; 
        font-weight: 700; 
        border-bottom: 0; 
        padding: 16px 20px; 
    }
    .checkout-scope .card-body { padding: 22px; }
    .checkout-scope .form-label { font-weight: 600; color: #374151; }
    .checkout-scope .form-control { 
        border-radius: 12px; 
        border: 1px solid #e5e7eb; 
        background: #fff;
        padding: 12px 14px;
        transition: all .2s ease;
    }
    .checkout-scope .form-control:focus { 
        border-color: #5a67d8; 
        box-shadow: 0 0 0 .2rem rgba(90,103,216,.25); 
    }
    .checkout-scope .order-item { background: #fff; border-radius: 12px; padding: 12px; }
    .checkout-scope .btn-primary.btn-lg { 
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none; border-radius: 26px; padding: 12px 18px; font-weight: 700; 
        box-shadow: 0 8px 20px rgba(32,201,151,.35);
    }
    .checkout-scope .btn-outline-secondary { border-radius: 26px; }
    .checkout-scope small.text-muted { color: #6b7280 !important; }
</style>

<div class="container-fluid checkout-scope">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">Checkout</h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Booking")">Book Services</a></li>
                        <li class="breadcrumb-item active">Checkout</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <form asp-action="ProcessBooking" method="post" id="checkoutForm">
        <div class="row">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Customer Information</h5>
                    </div>
                    <div class="card-body">
                        <!-- Row 1: Name, Email, Phone -->
                        <div class="row">
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerName" class="form-label">Full Name *</label>
                                    <input asp-for="CustomerName" class="form-control" required placeholder="Enter your full name">
                                    <span asp-validation-for="CustomerName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerEmail" class="form-label">Email Address *</label>
                                    <input asp-for="CustomerEmail" type="email" class="form-control" required placeholder="Enter your email">
                                    <span asp-validation-for="CustomerEmail" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerPhone" class="form-label">Phone Number *</label>
                                    <input asp-for="CustomerPhone" class="form-control" required placeholder="Enter your phone number">
                                    <span asp-validation-for="CustomerPhone" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Row 2: Company, Service Date, spacer -->
                        <div class="row">
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CompanyName" class="form-label">Company Name</label>
                                    <input asp-for="CompanyName" class="form-control" placeholder="Enter your company name">
                                    <span asp-validation-for="CompanyName" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ServiceDate" class="form-label">Preferred Service Date</label>
                                    <input asp-for="ServiceDate" type="date" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")">
                                    <span asp-validation-for="ServiceDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 d-none d-lg-block"></div>
                        </div>

                        <!-- Row 3: Address, Special Requirements, spacer -->
                        <div class="row">
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerAddress" class="form-label">Address</label>
                                    <textarea asp-for="CustomerAddress" class="form-control" rows="3" placeholder="Enter your address"></textarea>
                                    <span asp-validation-for="CustomerAddress" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-6">
                                <div class="mb-3">
                                    <label asp-for="SpecialRequirements" class="form-label">Special Requirements</label>
                                    <textarea asp-for="SpecialRequirements" class="form-control" rows="3" placeholder="Any special requirements or notes"></textarea>
                                    <span asp-validation-for="SpecialRequirements" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-lg-4 d-none d-lg-block"></div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Order Summary</h5>
                    </div>
                    <div class="card-body">
                        @if (bookingItems != null && bookingItems.Any())
                        {
                            @foreach (var item in bookingItems)
                            {
                                <div class="order-item mb-3 pb-3 border-bottom">
                                    <div class="d-flex justify-content-between align-items-start">
                                        <div>
                                            <h6 class="mb-1">@item.ServiceName</h6>
                                            <small class="text-muted">@item.ServiceType</small>
                                            @if (item.WorkforceSize.HasValue)
                                            {
                                                <br><small class="text-muted">Workforce: @item.WorkforceSize workers</small>
                                            }
                                            @if (!string.IsNullOrEmpty(item.Location))
                                            {
                                                <br><small class="text-muted">Location: @item.Location</small>
                                            }
                                        </div>
                                        <div class="text-end">
                                            <strong>@item.Currency @item.TotalAmount.ToString("F2")</strong>
                                        </div>
                                    </div>
                                    
                                    @if (item.WorkforceSize.HasValue && item.ManDaysRequired.HasValue)
                                    {
                                        <div class="mt-2">
                                            <small class="text-muted">
                                                @if (item.ManDaysRequired.HasValue)
                                                {
                                                    <span>Man-Days: @item.ManDaysRequired</span>
                                                }
                                                @if (item.UnitPrice > 0)
                                                {
                                                    <span> | Unit Price: @item.Currency @item.UnitPrice.ToString("F2")</span>
                                                }
                                                @if (item.TravelAllowance.HasValue)
                                                {
                                                    <span> | Travel: @item.Currency @item.TravelAllowance.Value.ToString("F2")</span>
                                                }
                                                @if (item.VatAmount.HasValue)
                                                {
                                                    <span> | VAT: @item.Currency @item.VatAmount.Value.ToString("F2")</span>
                                                }
                                            </small>
                                        </div>
                                    }
                                </div>
                            }
                        }

                        <div class="order-total">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Total Amount:</h5>
                                <h5 class="mb-0 text-primary">@currency @totalAmount.ToString("F2")</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Payment Method</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PaymentMethod" id="sslCommerz" value="SSLCommerz" checked>
                                <label class="form-check-label" for="sslCommerz">
                                    <i class="fas fa-credit-card me-2"></i> Online Payment (SSL Commerz)
                                </label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PaymentMethod" id="manual" value="Manual">
                                <label class="form-check-label" for="manual">
                                    <i class="fas fa-hand-holding-usd me-2"></i> Manual Payment
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <div class="card-body">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-lg">
                                <i class="fas fa-lock me-2"></i> Complete Booking
                            </button>
                            <a href="@Url.Action("Index", "Booking")" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i> Back to Services
                            </a>
                        </div>
                        
                        <div class="mt-3">
                            <small class="text-muted">
                                <i class="fas fa-shield-alt me-1"></i>
                                Your payment information is secure and encrypted.
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Hidden fields for service data -->
        @if (bookingItems != null)
        {
            @for (int i = 0; i < bookingItems.Count; i++)
            {
                <input type="hidden" name="serviceIds[@i]" value="@bookingItems[i].ServiceId" />
                <input type="hidden" name="quantities[@i]" value="@bookingItems[i].Quantity" />
                @if (bookingItems[i].WorkforceSize.HasValue)
                {
                    <input type="hidden" name="workforceSizes[@i]" value="@bookingItems[i].WorkforceSize.Value" />
                }
                @if (!string.IsNullOrEmpty(bookingItems[i].Location))
                {
                    <input type="hidden" name="locations[@i]" value="@bookingItems[i].Location" />
                }
            }
        }
    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('checkoutForm');
    
    form.addEventListener('submit', function(e) {
        const requiredFields = form.querySelectorAll('[required]');
        let isValid = true;
        
        requiredFields.forEach(field => {
            if (!field.value.trim()) {
                isValid = false;
                field.classList.add('is-invalid');
            } else {
                field.classList.remove('is-invalid');
            }
        });
        
        if (!isValid) {
            e.preventDefault();
            alert('Please fill in all required fields.');
        }
    });
});
</script>


