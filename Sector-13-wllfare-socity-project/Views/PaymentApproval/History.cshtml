@model IEnumerable<Sector_13_Welfare_Society___Digital_Management_System.Models.PaymentRecord>

@{
    ViewData["Title"] = "Payment History";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .payment-history-container {
        background: #f8f9fa;
        min-height: 100vh;
        padding: 20px;
    }
    
    .history-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
    }
    
    .history-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 10px;
    }
    
    .history-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
    }
    
    .payment-card {
        background: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 20px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        border-left: 5px solid #28a745;
        transition: all 0.3s ease;
    }
    
    .payment-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 10px 30px rgba(0,0,0,0.15);
    }
    
    .payment-card.pending {
        border-left-color: #ffc107;
    }
    
    .payment-card.rejected {
        border-left-color: #dc3545;
    }
    
    .payment-card.completed {
        border-left-color: #28a745;
    }
    
    .payment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        flex-wrap: wrap;
        gap: 15px;
    }
    
    .payment-id {
        font-size: 1.3rem;
        font-weight: 700;
        color: #333;
    }
    
    .payment-status {
        padding: 8px 16px;
        border-radius: 25px;
        font-weight: 600;
        font-size: 0.9rem;
    }
    
    .status-pending {
        background: #fff3cd;
        color: #856404;
    }
    
    .status-approved {
        background: #d4edda;
        color: #155724;
    }
    
    .status-rejected {
        background: #f8d7da;
        color: #721c24;
    }
    
    .status-completed {
        background: #d1ecf1;
        color: #0c5460;
    }
    
    .payment-details {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }
    
    .detail-item {
        display: flex;
        flex-direction: column;
    }
    
    .detail-label {
        font-weight: 600;
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 5px;
    }
    
    .detail-value {
        color: #333;
        font-size: 1rem;
    }
    
    .amount-display {
        font-size: 1.5rem;
        font-weight: 700;
        color: #28a745;
    }
    
    .payment-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
    }
    
    .btn-action {
        padding: 8px 16px;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
        text-decoration: none;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }
    
    .btn-approve {
        background: #28a745;
        color: white;
    }
    
    .btn-approve:hover {
        background: #218838;
        color: white;
        text-decoration: none;
    }
    
    .btn-reject {
        background: #dc3545;
        color: white;
    }
    
    .btn-reject:hover {
        background: #c82333;
        color: white;
        text-decoration: none;
    }
    
    .btn-view {
        background: #007bff;
        color: white;
    }
    
    .btn-view:hover {
        background: #0056b3;
        color: white;
        text-decoration: none;
    }
    
    .no-payments {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }
    
    .no-payments i {
        font-size: 4rem;
        color: #ddd;
        margin-bottom: 20px;
    }
    
    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    
    .stat-card {
        background: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }
    
    .stat-number {
        font-size: 2rem;
        font-weight: 700;
        color: #333;
        margin-bottom: 5px;
    }
    
    .stat-label {
        color: #666;
        font-size: 0.9rem;
    }
    
    @@media (max-width: 768px) {
        .payment-header {
            flex-direction: column;
            align-items: flex-start;
        }
        
        .payment-details {
            grid-template-columns: 1fr;
        }
        
        .payment-actions {
            justify-content: center;
        }
    }
</style>

<div class="payment-history-container">
    <div class="history-header">
        <h1 class="history-title">
            <i class="fas fa-history me-3"></i>
            Payment History
        </h1>
        <p class="history-subtitle">Complete overview of all payment transactions and their status</p>
    </div>

    @if (Model != null && Model.Any())
    {
        var totalPayments = Model.Count();
        var completedPayments = Model.Count(p => p.Status == "Completed");
        var pendingPayments = Model.Count(p => p.Status == "Pending");
        var totalAmount = Model.Sum(p => p.Amount);

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number">@totalPayments</div>
                <div class="stat-label">Total Payments</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@completedPayments</div>
                <div class="stat-label">Completed</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@pendingPayments</div>
                <div class="stat-label">Pending</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">৳@totalAmount.ToString("N0")</div>
                <div class="stat-label">Total Amount</div>
            </div>
        </div>

        @foreach (var payment in Model.OrderByDescending(p => p.CreatedAt))
        {
            <div class="payment-card @payment.Status.ToLower()">
                <div class="payment-header">
                    <div class="payment-id">
                        <i class="fas fa-receipt me-2"></i>
                        Payment #@payment.Id
                    </div>
                    <div class="payment-status status-@payment.Status.ToLower()">
                        @payment.Status
                    </div>
                </div>

                <div class="payment-details">
                    <div class="detail-item">
                        <span class="detail-label">Customer Name</span>
                        <span class="detail-value">@payment.CustomerName</span>
                    </div>
                    
                    <div class="detail-item">
                        <span class="detail-label">Payment Method</span>
                        <span class="detail-value">@payment.PaymentMethod</span>
                    </div>
                    
                    <div class="detail-item">
                        <span class="detail-label">Amount</span>
                        <span class="detail-value amount-display">৳@payment.Amount.ToString("N2")</span>
                    </div>
                    
                    <div class="detail-item">
                        <span class="detail-label">Transaction ID</span>
                        <span class="detail-value">@(payment.TransactionId ?? "N/A")</span>
                    </div>
                    
                    <div class="detail-item">
                        <span class="detail-label">Payment Date</span>
                        <span class="detail-value">@payment.CreatedAt.ToString("MMM dd, yyyy")</span>
                    </div>
                    
                    <div class="detail-item">
                        <span class="detail-label">Approval Status</span>
                        <span class="detail-value">
                            @if (payment.RequiresApproval)
                            {
                                <span class="badge bg-warning">@(payment.ApprovalStatus ?? "Pending")</span>
                            }
                            else
                            {
                                <span class="badge bg-success">Auto-Approved</span>
                            }
                        </span>
                    </div>
                </div>

                @if (!string.IsNullOrEmpty(payment.Notes))
                {
                    <div class="detail-item mb-3">
                        <span class="detail-label">Notes</span>
                        <span class="detail-value">@payment.Notes</span>
                    </div>
                }

                <div class="payment-actions">
                    @if (payment.RequiresApproval && payment.ApprovalStatus == "Pending")
                    {
                        <a href="@Url.Action("Approve", "PaymentApproval", new { id = payment.Id })" class="btn-action btn-approve">
                            <i class="fas fa-check me-1"></i>
                            Approve
                        </a>
                        <a href="@Url.Action("Reject", "PaymentApproval", new { id = payment.Id })" class="btn-action btn-reject">
                            <i class="fas fa-times me-1"></i>
                            Reject
                        </a>
                    }
                    
                    <a href="@Url.Action("Details", "PaymentApproval", new { id = payment.Id })" class="btn-action btn-view">
                        <i class="fas fa-eye me-1"></i>
                        View Details
                    </a>
                </div>
            </div>
        }
    }
    else
    {
        <div class="no-payments">
            <i class="fas fa-receipt"></i>
            <h3>No Payment Records Found</h3>
            <p>There are no payment transactions to display at this time.</p>
        </div>
    }
</div>
