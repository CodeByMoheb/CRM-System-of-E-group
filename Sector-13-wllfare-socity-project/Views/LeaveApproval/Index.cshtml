@{
    ViewData["Title"] = "Leave Approval Dashboard";
    Layout = "_DashboardLayout";
}

<div class="container-fluid">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    <!-- Header -->
    <div class="row">
        <div class="col-12">
            <div class="card bg-gradient-primary text-white mb-4 border-0 shadow-lg">
                <div class="card-body">
                    <h2 class="card-title">
                        <i class="fas fa-calendar-check me-3"></i>
                        Leave Approval Dashboard
                    </h2>
                    <p class="card-text">Manage and approve employee leave requests</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card border-0 shadow-lg bg-gradient-warning text-white">
                <div class="card-body text-center">
                    <i class="fas fa-clock fa-3x mb-3"></i>
                    <h3 class="card-title">@(ViewBag.PendingLeaves?.Count ?? 0)</h3>
                    <p class="card-text">Pending Approvals</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-lg bg-gradient-success text-white">
                <div class="card-body text-center">
                    <i class="fas fa-check-circle fa-3x mb-3"></i>
                    <h3 class="card-title">@(ViewBag.ApprovedLeaves?.Count ?? 0)</h3>
                    <p class="card-text">Approved Requests</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-0 shadow-lg bg-gradient-danger text-white">
                <div class="card-body text-center">
                    <i class="fas fa-times-circle fa-3x mb-3"></i>
                    <h3 class="card-title">@(ViewBag.RejectedLeaves?.Count ?? 0)</h3>
                    <p class="card-text">Rejected Requests</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Pending Leave Requests -->
    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-gradient-info text-white py-3 border-0">
                    <h5 class="mb-0">
                        <i class="fas fa-clock me-2"></i>
                        Pending Leave Requests
                    </h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.PendingLeaves != null && ViewBag.PendingLeaves.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Employee</th>
                                        <th>Leave Type</th>
                                        <th>Start Date</th>
                                        <th>End Date</th>
                                        <th>Days</th>
                                        <th>Reason</th>
                                        <th>Applied On</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var leave in ViewBag.PendingLeaves)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm me-3">
                                                        <i class="fas fa-user-circle fa-2x text-primary"></i>
                                                    </div>
                                                    <div>
                                                        <strong>@leave.Employee.Name</strong>
                                                        <br>
                                                        <small class="text-muted">@leave.Employee.EmployeeId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @(leave.LeaveType == "Casual" ? "bg-info" : 
                                                                   leave.LeaveType == "Sick" ? "bg-warning" : 
                                                                   leave.LeaveType == "Paid" ? "bg-success" : "bg-danger")">
                                                    @leave.LeaveType
                                                </span>
                                            </td>
                                            <td>@leave.StartDate.ToString("dd/MM/yyyy")</td>
                                            <td>@leave.EndDate.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <span class="badge bg-secondary">@leave.NumberOfDays day(s)</span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(leave.Reason))
                                                {
                                                    <small class="text-muted">@leave.Reason</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <small class="text-muted">@leave.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button type="button" class="btn btn-success btn-sm approve-btn" 
                                                            data-leave-id="@leave.LeaveId" 
                                                            data-employee-name="@leave.Employee.Name">
                                                        <i class="fas fa-check me-1"></i>Approve
                                                    </button>
                                                    <button type="button" class="btn btn-danger btn-sm reject-btn" 
                                                            data-leave-id="@leave.LeaveId" 
                                                            data-employee-name="@leave.Employee.Name">
                                                        <i class="fas fa-times me-1"></i>Reject
                                                    </button>
                                                    <a href="@Url.Action("Details", new { id = leave.LeaveId })" 
                                                       class="btn btn-info btn-sm">
                                                        <i class="fas fa-eye me-1"></i>View
                                                    </a>
                                                </div>
                                                <!-- Fallback forms for direct submission -->
                                                <div style="display: none;">
                                                    <form id="approve-form-@leave.LeaveId" method="post" action="@Url.Action("Approve")">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@leave.LeaveId" />
                                                        <input type="hidden" name="remarks" value="" />
                                                    </form>
                                                    <form id="reject-form-@leave.LeaveId" method="post" action="@Url.Action("Reject")">
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@leave.LeaveId" />
                                                        <input type="hidden" name="remarks" value="" />
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-check-circle fa-3x text-success mb-3"></i>
                            <h5 class="text-success">No Pending Requests</h5>
                            <p class="text-muted">All leave requests have been processed.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Approved/Rejected Leaves -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-gradient-success text-white py-3 border-0">
                    <h6 class="mb-0">
                        <i class="fas fa-check-circle me-2"></i>
                        Recently Approved
                    </h6>
                </div>
                <div class="card-body">
                    @if (ViewBag.ApprovedLeaves != null && ViewBag.ApprovedLeaves.Count > 0)
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var leave in ViewBag.ApprovedLeaves)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@leave.Employee.Name</strong>
                                        <br>
                                        <small class="text-muted">@leave.LeaveType - @leave.StartDate.ToString("dd/MM/yyyy")</small>
                                    </div>
                                    <small class="text-muted">@leave.ApprovalDate?.ToString("dd/MM/yyyy")</small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No approved leaves yet.</p>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-0 shadow-lg">
                <div class="card-header bg-gradient-danger text-white py-3 border-0">
                    <h6 class="mb-0">
                        <i class="fas fa-times-circle me-2"></i>
                        Recently Rejected
                    </h6>
                </div>
                <div class="card-body">
                    @if (ViewBag.RejectedLeaves != null && ViewBag.RejectedLeaves.Count > 0)
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var leave in ViewBag.RejectedLeaves)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div>
                                        <strong>@leave.Employee.Name</strong>
                                        <br>
                                        <small class="text-muted">@leave.LeaveType - @leave.StartDate.ToString("dd/MM/yyyy")</small>
                                    </div>
                                    <small class="text-muted">@leave.ApprovalDate?.ToString("dd/MM/yyyy")</small>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No rejected leaves yet.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Approval Modal -->
<div class="modal fade" id="approvalModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="approvalModalTitle">Approve Leave Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p id="approvalModalBody">Are you sure you want to approve this leave request?</p>
                <div class="mb-3">
                    <label for="approvalRemarks" class="form-label">Remarks (Optional)</label>
                    <textarea class="form-control" id="approvalRemarks" rows="3" placeholder="Add any remarks..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" id="confirmApprove">Approve</button>
            </div>
        </div>
    </div>
</div>

<!-- Rejection Modal -->
<div class="modal fade" id="rejectionModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectionModalTitle">Reject Leave Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p id="rejectionModalBody">Are you sure you want to reject this leave request?</p>
                <div class="mb-3">
                    <label for="rejectionRemarks" class="form-label">Remarks (Required)</label>
                    <textarea class="form-control" id="rejectionRemarks" rows="3" placeholder="Please provide a reason for rejection..." required></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmReject">Reject</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script>
        $(function () {
            let currentLeaveId = null;
            let currentAction = null;

            // Approve button click
            $('.approve-btn').on('click', function () {
                currentLeaveId = $(this).data('leave-id');
                currentAction = 'approve';
                const employeeName = $(this).data('employee-name');
                
                $('#approvalModalTitle').text('Approve Leave Request');
                $('#approvalModalBody').text(`Are you sure you want to approve the leave request for ${employeeName}?`);
                $('#approvalRemarks').val('');
                
                $('#approvalModal').modal('show');
            });

            // Reject button click
            $('.reject-btn').on('click', function () {
                currentLeaveId = $(this).data('leave-id');
                currentAction = 'reject';
                const employeeName = $(this).data('employee-name');
                
                $('#rejectionModalTitle').text('Reject Leave Request');
                $('#rejectionModalBody').text(`Are you sure you want to reject the leave request for ${employeeName}?`);
                $('#rejectionRemarks').val('');
                
                $('#rejectionModal').modal('show');
            });

            // Confirm approval
            $('#confirmApprove').on('click', function () {
                if (currentLeaveId && currentAction === 'approve') {
                    const remarks = $('#approvalRemarks').val();
                    
                    // Disable button to prevent double-clicking
                    $(this).prop('disabled', true).text('Approving...');
                    
                    console.log('Sending approval request:', {
                        id: currentLeaveId,
                        remarks: remarks,
                        token: $('input[name="__RequestVerificationToken"]').val()
                    });
                    
                    // Create form data
                    const formData = new FormData();
                    formData.append('id', currentLeaveId);
                    formData.append('remarks', remarks);
                    formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
                    
                    fetch('@Url.Action("Approve")', {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: formData
                    })
                    .then(response => {
                        console.log('Response status:', response.status);
                        return response.json();
                    })
                    .then(data => {
                        console.log('Approval response:', data);
                        if (data.success) {
                            showAlert('success', data.message);
                            // Reload immediately
                            location.reload();
                        } else {
                            showAlert('error', data.message);
                            $(this).prop('disabled', false).text('Approve');
                        }
                    })
                    .catch(error => {
                        console.log('Approval failed, trying fallback method:', error);
                        // Fallback: use form submission
                        const form = document.getElementById(`approve-form-${currentLeaveId}`);
                        if (form) {
                            form.querySelector('input[name="remarks"]').value = remarks;
                            form.submit();
                        } else {
                            showAlert('error', 'An error occurred. Please try again.');
                            $(this).prop('disabled', false).text('Approve');
                        }
                    })
                    .finally(() => {
                        $('#approvalModal').modal('hide');
                    });
                }
            });

            // Confirm rejection
            $('#confirmReject').on('click', function () {
                if (currentLeaveId && currentAction === 'reject') {
                    const remarks = $('#rejectionRemarks').val();
                    
                    if (!remarks.trim()) {
                        showAlert('warning', 'Please provide a reason for rejection.');
                        return;
                    }
                    
                    // Disable button to prevent double-clicking
                    $(this).prop('disabled', true).text('Rejecting...');
                    
                    console.log('Sending rejection request:', {
                        id: currentLeaveId,
                        remarks: remarks,
                        token: $('input[name="__RequestVerificationToken"]').val()
                    });
                    
                    // Create form data
                    const formData = new FormData();
                    formData.append('id', currentLeaveId);
                    formData.append('remarks', remarks);
                    formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
                    
                    fetch('@Url.Action("Reject")', {
                        method: 'POST',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: formData
                    })
                    .then(response => {
                        console.log('Response status:', response.status);
                        return response.json();
                    })
                    .then(data => {
                        console.log('Rejection response:', data);
                        if (data.success) {
                            showAlert('success', data.message);
                            // Reload immediately
                            location.reload();
                        } else {
                            showAlert('error', data.message);
                            $(this).prop('disabled', false).text('Reject');
                        }
                    })
                    .catch(error => {
                        console.log('Rejection failed, trying fallback method:', error);
                        // Fallback: use form submission
                        const form = document.getElementById(`reject-form-${currentLeaveId}`);
                        if (form) {
                            form.querySelector('input[name="remarks"]').value = remarks;
                            form.submit();
                        } else {
                            showAlert('error', 'An error occurred. Please try again.');
                            $(this).prop('disabled', false).text('Reject');
                        }
                    })
                    .finally(() => {
                        $('#rejectionModal').modal('hide');
                    });
                }
            });

            function showAlert(type, message) {
                const alertClass = type === 'success' ? 'alert-success' : 
                                 type === 'error' ? 'alert-danger' : 'alert-warning';
                
                const alertHtml = `
                    <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                        <i class="fas fa-${type === 'success' ? 'check-circle' : 
                                         type === 'error' ? 'exclamation-circle' : 'exclamation-triangle'} me-2"></i>
                        ${message}
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                `;
                
                // Insert alert at the top of the page
                $('.container-fluid').prepend(alertHtml);
                
                // Auto-remove after 5 seconds
                setTimeout(() => {
                    $('.alert').fadeOut();
                }, 5000);
            }
        });
    </script>
}

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    
    .bg-gradient-info {
        background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
    }
    
    .bg-gradient-success {
        background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%);
    }
    
    .bg-gradient-warning {
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
    }
    
    .bg-gradient-danger {
        background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
    }
    
    .avatar-sm {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .btn-group .btn {
        margin-right: 2px;
    }
    
    .btn-group .btn:last-child {
        margin-right: 0;
    }
</style>

