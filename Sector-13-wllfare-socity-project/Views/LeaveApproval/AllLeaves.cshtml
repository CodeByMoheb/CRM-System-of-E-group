@model IEnumerable<Leave>
@{
    ViewData["Title"] = "All Leave Requests";
    Layout = "_DashboardLayout";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <h6 class="m-0 font-weight-bold text-primary">
                        <i class="fas fa-calendar-alt me-2"></i>All Leave Requests
                    </h6>
                    <div class="d-flex gap-2">
                        <button class="btn btn-sm btn-success" onclick="exportLeaves()">
                            <i class="fas fa-download me-1"></i>Export
                        </button>
                        <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#leaveFilters" aria-expanded="false" aria-controls="leaveFilters">
                            <i class="fas fa-filter me-1"></i>Filters
                        </button>
                        <a href="@Url.Action("Index", "LeaveApproval")" class="btn btn-sm btn-info">
                            <i class="fas fa-clock me-1"></i>Pending Approvals
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Collapsible Filters -->
                    <div class="row mb-4">
                        <div class="col-md-12">
                            <div class="collapse" id="leaveFilters">
                            <form method="get" class="row g-3">
                                <div class="col-md-2">
                                    <label class="form-label">From Date</label>
                                    <input type="date" name="from" class="form-control" value="@ViewBag.From.ToString("yyyy-MM-dd")" />
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">To Date</label>
                                    <input type="date" name="to" class="form-control" value="@ViewBag.To.ToString("yyyy-MM-dd")" />
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">Employee</label>
                                    <select name="employeeId" class="form-select">
                                        <option value="">All Employees</option>
                                        @foreach (var emp in ViewBag.Employees as List<Employee>)
                                        {
                                            @if (ViewBag.EmployeeId == emp.Id)
                                            {
                                                <option value="@emp.Id" selected>@emp.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@emp.Id">@emp.Name</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-2">
                                    <label class="form-label">Status</label>
                                    <select name="status" class="form-select">
                                        <option value="">All Status</option>
                                        @if (ViewBag.Status == "Pending")
                                        {
                                            <option value="Pending" selected>Pending</option>
                                        }
                                        else
                                        {
                                            <option value="Pending">Pending</option>
                                        }
                                        @if (ViewBag.Status == "Approved")
                                        {
                                            <option value="Approved" selected>Approved</option>
                                        }
                                        else
                                        {
                                            <option value="Approved">Approved</option>
                                        }
                                        @if (ViewBag.Status == "Rejected")
                                        {
                                            <option value="Rejected" selected>Rejected</option>
                                        }
                                        else
                                        {
                                            <option value="Rejected">Rejected</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label class="form-label">&nbsp;</label>
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-search me-1"></i>Filter
                                        </button>
                                        <a href="@Url.Action("AllLeaves", "LeaveApproval")" class="btn btn-secondary">
                                            <i class="fas fa-times me-1"></i>Clear
                                        </a>
                                    </div>
                                </div>
                            </form>
                            </div>
                        </div>
                    </div>

                    <!-- Leave Requests Table -->
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover" id="leavesTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>Employee</th>
                                    <th>Leave Type</th>
                                    <th>Start Date</th>
                                    <th>End Date</th>
                                    <th>Days</th>
                                    <th>Reason</th>
                                    <th>Status</th>
                                    <th>Applied Date</th>
                                    <th>Approved By</th>
                                    <th>Approval Date</th>
                                    <th>Remarks</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.Any())
                                {
                                    @foreach (var leave in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <div class="avatar-sm bg-primary text-white rounded-circle d-flex align-items-center justify-content-center me-2">
                                                        @leave.Employee.Name.Substring(0, 1).ToUpper()
                                                    </div>
                                                    <div>
                                                        <strong>@leave.Employee.Name</strong>
                                                        <br><small class="text-muted">@leave.Employee.EmployeeId</small>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                @{
                                                    var leaveTypeClass = leave.LeaveType switch
                                                    {
                                                        "Casual" => "bg-info",
                                                        "Sick" => "bg-warning",
                                                        "Paid" => "bg-success",
                                                        "Unpaid" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @leaveTypeClass">@leave.LeaveType</span>
                                            </td>
                                            <td>
                                                <span class="fw-bold">@leave.StartDate.ToString("dd MMM yyyy")</span>
                                                <br><small class="text-muted">@leave.StartDate.ToString("dddd")</small>
                                            </td>
                                            <td>
                                                <span class="fw-bold">@leave.EndDate.ToString("dd MMM yyyy")</span>
                                                <br><small class="text-muted">@leave.EndDate.ToString("dddd")</small>
                                            </td>
                                            <td>
                                                <span class="badge bg-primary">@leave.NumberOfDays day(s)</span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(leave.Reason))
                                                {
                                                    <span class="text-muted" title="@leave.Reason">
                                                        @(leave.Reason.Length > 30 ? leave.Reason.Substring(0, 30) + "..." : leave.Reason)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @{
                                                    var statusClass = leave.ApprovalStatus switch
                                                    {
                                                        "Pending" => "bg-warning",
                                                        "Approved" => "bg-success",
                                                        "Rejected" => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @statusClass">@leave.ApprovalStatus</span>
                                            </td>
                                            <td>
                                                <span class="text-info">@leave.CreatedAt.ToString("dd MMM yyyy")</span>
                                                <br><small class="text-muted">@leave.CreatedAt.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                @if (leave.ApprovedBy != null)
                                                {
                                                    <span class="text-success">@leave.ApprovedBy.Name</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (leave.ApprovalDate.HasValue)
                                                {
                                                    <span class="text-success">@leave.ApprovalDate.Value.ToString("dd MMM yyyy")</span>
                                                    <br><small class="text-muted">@leave.ApprovalDate.Value.ToString("HH:mm")</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(leave.ApprovalRemarks))
                                                {
                                                    <span class="text-muted" title="@leave.ApprovalRemarks">
                                                        @(leave.ApprovalRemarks.Length > 20 ? leave.ApprovalRemarks.Substring(0, 20) + "..." : leave.ApprovalRemarks)
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "LeaveApproval", new { id = leave.LeaveId })" class="btn btn-sm btn-outline-info">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    @if (leave.ApprovalStatus == "Pending")
                                                    {
                                                        <button type="button" class="btn btn-sm btn-outline-success" onclick="approveLeave(@leave.LeaveId)">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="rejectLeave(@leave.LeaveId)">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="12" class="text-center text-muted py-4">
                                            <i class="fas fa-calendar-times fa-3x mb-3"></i>
                                            <br>No leave requests found for the selected criteria
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Summary Cards -->
                    @if (Model != null && Model.Any())
                    {
                        <div class="row mt-4">
                            <div class="col-md-3">
                                <div class="card border-left-warning shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">Pending</div>
                                                <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(l => l.ApprovalStatus == "Pending")</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fas fa-clock fa-2x text-gray-300"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card border-left-success shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-success text-uppercase mb-1">Approved</div>
                                                <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(l => l.ApprovalStatus == "Approved")</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card border-left-danger shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Rejected</div>
                                                <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count(l => l.ApprovalStatus == "Rejected")</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fas fa-times-circle fa-2x text-gray-300"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="card border-left-info shadow h-100 py-2">
                                    <div class="card-body">
                                        <div class="row no-gutters align-items-center">
                                            <div class="col mr-2">
                                                <div class="text-xs font-weight-bold text-info text-uppercase mb-1">Total Days</div>
                                                <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Sum(l => l.NumberOfDays)</div>
                                            </div>
                                            <div class="col-auto">
                                                <i class="fas fa-calendar-day fa-2x text-gray-300"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Approve Leave Modal -->
<div class="modal fade" id="approveLeaveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Approve Leave Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="approveLeaveForm">
                    <input type="hidden" id="approveLeaveId" />
                    <div class="mb-3">
                        <label class="form-label">Approval Remarks (Optional)</label>
                        <textarea id="approveRemarks" class="form-control" rows="3" placeholder="Add any remarks for this approval..."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="confirmApprove()">Approve Leave</button>
            </div>
        </div>
    </div>
</div>

<!-- Reject Leave Modal -->
<div class="modal fade" id="rejectLeaveModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Reject Leave Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="rejectLeaveForm">
                    <input type="hidden" id="rejectLeaveId" />
                    <div class="mb-3">
                        <label class="form-label">Rejection Reason *</label>
                        <textarea id="rejectRemarks" class="form-control" rows="3" placeholder="Please provide a reason for rejection..." required></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmReject()">Reject Leave</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function approveLeave(leaveId) {
            $('#approveLeaveId').val(leaveId);
            $('#approveRemarks').val('');
            $('#approveLeaveModal').modal('show');
        }

        function rejectLeave(leaveId) {
            $('#rejectLeaveId').val(leaveId);
            $('#rejectRemarks').val('');
            $('#rejectLeaveModal').modal('show');
        }

        function confirmApprove() {
            var leaveId = $('#approveLeaveId').val();
            var remarks = $('#approveRemarks').val();

            $.ajax({
                url: '/LeaveApproval/Approve',
                type: 'POST',
                data: {
                    id: leaveId,
                    remarks: remarks,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#approveLeaveModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while approving the leave request.');
                }
            });
        }

        function confirmReject() {
            var leaveId = $('#rejectLeaveId').val();
            var remarks = $('#rejectRemarks').val();

            if (!remarks.trim()) {
                alert('Please provide a reason for rejection.');
                return;
            }

            $.ajax({
                url: '/LeaveApproval/Reject',
                type: 'POST',
                data: {
                    id: leaveId,
                    remarks: remarks,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#rejectLeaveModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while rejecting the leave request.');
                }
            });
        }

        function exportLeaves() {
            // Get current filter parameters
            var from = $('input[name="from"]').val();
            var to = $('input[name="to"]').val();
            var employeeId = $('select[name="employeeId"]').val();
            var status = $('select[name="status"]').val();

            // Build export URL
            var exportUrl = '/LeaveApproval/ExportLeaves?';
            if (from) exportUrl += 'from=' + from + '&';
            if (to) exportUrl += 'to=' + to + '&';
            if (employeeId) exportUrl += 'employeeId=' + employeeId + '&';
            if (status) exportUrl += 'status=' + status + '&';

            // Open export URL
            window.open(exportUrl, '_blank');
        }

        // Initialize DataTable if available
        $(document).ready(function() {
            if ($.fn.DataTable) {
                $('#leavesTable').DataTable({
                    "pageLength": 25,
                    "order": [[ 7, "desc" ]],
                    "columnDefs": [
                        { "orderable": false, "targets": 11 }
                    ]
                });
            }
        });
    </script>
}
